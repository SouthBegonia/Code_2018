/*
程序功能：简单展示静态变量和动态变量的区别。

动态变量：初值不是在编译时赋予的，而是在函数调用时赋予的，每调用一次函数都会对变量重新赋一次初值。
静态变量：在编译时赋初始值，并且只赋一次初值，在以后每次调用函数时，只是使用上一次函数被调用结束时变量的值。

以下内容转载自：guosir_的博客――――C语言动态变量和静态变量的区别
---动态局部变量---
作用域为当前函数，从定义位置，到其所在的{}的结束位置。
生命周期为从函数调用到函数退出。
无显式初始化时默认初始化值为随机值。

---动态全局变量---
作用域为整个项目，即最终编译成可执行文件的所有文件中均可以使用动态全局变量。
生命周期为从程序运行到程序退出，即贯穿整个运行时间。
无显式初始化时默认初始化值为0。

---静态局部变量---
作用域为当前函数，从定义位置，到其所在的{}的结束位置。
生命周期为从程序运行到程序退出，即贯穿整个运行时间，当下次函数调用时，静态局部变量不会被再次初始化，而是沿用上次函数退出时的值。
无显式初始化时默认初始化值为0。

---静态全局变量---
作用域为当前文件，从定义/声明位置到文件结尾。
生命周期为从程序运行到程序退出，即贯穿整个运行时间。
无显式初始化时默认初始化值为0。

*/
#include<stdio.h>

void fun()        
{
	int j=0;	//动态变量
	j++;
	printf("%d", j);	//输出结果为11111
}

void fun1()        
{
	static int j;	//静态变量，未赋值则默认为0
	j++;
	printf("%d", j);	//输出结果为12345
}

int main()
{
	int i;

	for (i = 0; i<5; i++)
		fun();

	putchar('\n');

	for (i = 0; i<5; i++)
		fun1();

	getchar();
	return 0;
}

