/*
	程序功能：用两个数组，实现链表功能
	原理：数组data[]中的内容表示存放的具体数字(存数)；
		  数组right[]用来存放地址(指向)，存放元素的下一个元素在数组data中的位置；
		  例如：right[1]的值为2，表示当前序列中1号元素的下一个元素存放在data[2]中
	缺点：假若遇到插入数字比首位元素小
*/
#include<stdio.h>
int main()
{
	int data[101], right[101];
	int i, n, t, len;

	scanf_s("%d", &n);
	for (i = 1; i <= n; i++)
		scanf_s("%d", &data[i]);
	len = n;

	for (i = 1; i <= n; i++)                         //初始化数组right[]
	{
		if (i != n)
			right[i] = i + 1;
		else
			right[i] = 0;
	}
	
	len++;
	scanf_s("%d", &data[len]);
	
	t = 1;                                           // t 表示第几号元素
	while (t != 0)									 //从链表头部开始遍历
	{
		/*  假若插入的数大于首位元素的插入
		if (data[1] > data[len])                     
		{
			right[len] = right[0];       //理解为首位元素的地址变更为新插入的数的地址
			right[0] = len; 
			break;
		}
		*/
		if (data[right[t]] > data[len])              //如果当前结点的下一结点的值大于待插入的数，则，将数插入到中间
		{
			right[len] = right[t];                   //将新插入的数的下一个结点标号等于当前结点的下一结点编号
			right[t] = len;                          //当前结点的下一结点编号就是新插入数字的编号
			break;
		}
		t = right[t];
	}
	/*
		例:
		_______________________________________________
				1   2   3   4   5   6   7   8   9   10             元素序号 N
		data	2   3   5   8   9   10  18  26  32                 输入的数组
		_______________________________________________
				1   2   3   4   5   6   7   8   9   10             元素序号 N
		right   2   3   4   5   6   7   8   9   0                  当前元素 N 的下一个元素 N +1 存放在 data [right[N]] 中
		_______________________________________________

		当在 8 前面插入数字 6 后：
		_______________________________________________
				1   2   3   4   5   6   7   8   9   10
		data	2   3   5   8   9   10  18  26  32  6
		_______________________________________________
				1   2   3   4   5   6   7   8   9   10
		right   2   3   10  5   6   7   8   9   0   4   
		_______________________________________________
	*/


	/*假若插入的数大于首位元素的输出
	if (right[0] != 0)
	{
		printf("right[0] = %d\n", right[0]);
		printf("新的首位元素为为 %d\n", data[right[0]]);
	}
	*/

	t = 1;                                //正常遍历输出
	while (t != 0)
	{
		printf("%d ", data[t]);
		t = right[t];                     
		/* 
			t在right[]数组中移动，即便data数组无序，right数组通过 t 的指向可以做到有序输出
		但，物理上地址并不挨在一起，只是逻辑上在一起。
		*/
	}

	// printf("第 2 号元素的值是：%d\n", data[right[2 - 1]]); 

	getchar();
	getchar();
	return 0;
}